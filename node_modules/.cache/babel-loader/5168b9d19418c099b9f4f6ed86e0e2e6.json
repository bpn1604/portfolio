{"ast":null,"code":"import _slicedToArray from\"C:/Users/lenovo/Documents/GitHub/portfolio/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{createContext,useReducer}from\"react\";import{jsx as _jsx}from\"react/jsx-runtime\";export var ThemeContext=/*#__PURE__*/createContext();var initialState={darkMode:false};var themeReducer=function themeReducer(state,action){switch(action.type){case\"LIGHTMODE\":return{darkMode:false};case\"DARKMODE\":return{darkMode:true};default:return state;}};export function ThemeProvider(props){var _useReducer=useReducer(themeReducer,initialState),_useReducer2=_slicedToArray(_useReducer,2),state=_useReducer2[0],dispatch=_useReducer2[1];return/*#__PURE__*/_jsx(ThemeContext.Provider,{value:{state:false||state,dispatch:dispatch},children:props.children});}","map":{"version":3,"sources":["C:/Users/lenovo/Documents/GitHub/portfolio/src/themeProvider.jsx"],"names":["React","createContext","useReducer","ThemeContext","initialState","darkMode","themeReducer","state","action","type","ThemeProvider","props","dispatch","children"],"mappings":"gIAAA,MAAOA,CAAAA,KAAP,EAAgBC,aAAhB,CAA+BC,UAA/B,KAAiD,OAAjD,C,2CAEA,MAAO,IAAMC,CAAAA,YAAY,cAAGF,aAAa,EAAlC,CACP,GAAMG,CAAAA,YAAY,CAAG,CAAEC,QAAQ,CAAE,KAAZ,CAArB,CAEA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACC,KAAD,CAAQC,MAAR,CAAmB,CACtC,OAAQA,MAAM,CAACC,IAAf,EACE,IAAK,WAAL,CACE,MAAO,CAAEJ,QAAQ,CAAE,KAAZ,CAAP,CACF,IAAK,UAAL,CACE,MAAO,CAAEA,QAAQ,CAAE,IAAZ,CAAP,CACF,QACE,MAAOE,CAAAA,KAAP,CANJ,CAQD,CATD,CAWA,MAAO,SAASG,CAAAA,aAAT,CAAuBC,KAAvB,CAA8B,CACnC,gBAA0BT,UAAU,CAACI,YAAD,CAAeF,YAAf,CAApC,4CAAOG,KAAP,iBAAcK,QAAd,iBAEA,mBACE,KAAC,YAAD,CAAc,QAAd,EACE,KAAK,CAAE,CAAEL,KAAK,CAAE,OAASA,KAAlB,CAAyBK,QAAQ,CAAEA,QAAnC,CADT,UAGGD,KAAK,CAACE,QAHT,EADF,CAOD","sourcesContent":["import React, { createContext, useReducer } from \"react\";\r\n\r\nexport const ThemeContext = createContext();\r\nconst initialState = { darkMode: false };\r\n\r\nconst themeReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"LIGHTMODE\":\r\n      return { darkMode: false };\r\n    case \"DARKMODE\":\r\n      return { darkMode: true };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport function ThemeProvider(props) {\r\n  const [state, dispatch] = useReducer(themeReducer, initialState);\r\n\r\n  return (\r\n    <ThemeContext.Provider\r\n      value={{ state: false || state, dispatch: dispatch }}\r\n    >\r\n      {props.children}\r\n    </ThemeContext.Provider>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}