{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lenovo\\\\Documents\\\\GitHub\\\\portfolio\\\\src\\\\themeProvider.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { createContext, useReducer } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ThemeContext = /*#__PURE__*/createContext();\nconst initialState = {\n  darkMode: false\n};\n\nconst themeReducer = (state, action) => {\n  switch (action.type) {\n    case \"LIGHTMODE\":\n      return {\n        darkMode: false\n      };\n\n    case \"DARKMODE\":\n      return {\n        darkMode: true\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport function ThemeProvider(props) {\n  _s();\n\n  const [state, dispatch] = useReducer(themeReducer, initialState);\n  return /*#__PURE__*/_jsxDEV(ThemeContext.Provider, {\n    value: {\n      state: false || state,\n      dispatch: dispatch\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ThemeProvider, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n\n_c = ThemeProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"ThemeProvider\");","map":{"version":3,"sources":["C:/Users/lenovo/Documents/GitHub/portfolio/src/themeProvider.jsx"],"names":["React","createContext","useReducer","ThemeContext","initialState","darkMode","themeReducer","state","action","type","ThemeProvider","props","dispatch","children"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,UAA/B,QAAiD,OAAjD;;AAEA,OAAO,MAAMC,YAAY,gBAAGF,aAAa,EAAlC;AACP,MAAMG,YAAY,GAAG;AAAEC,EAAAA,QAAQ,EAAE;AAAZ,CAArB;;AAEA,MAAMC,YAAY,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACtC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,WAAL;AACE,aAAO;AAAEJ,QAAAA,QAAQ,EAAE;AAAZ,OAAP;;AACF,SAAK,UAAL;AACE,aAAO;AAAEA,QAAAA,QAAQ,EAAE;AAAZ,OAAP;;AACF;AACE,aAAOE,KAAP;AANJ;AAQD,CATD;;AAWA,OAAO,SAASG,aAAT,CAAuBC,KAAvB,EAA8B;AAAA;;AACnC,QAAM,CAACJ,KAAD,EAAQK,QAAR,IAAoBV,UAAU,CAACI,YAAD,EAAeF,YAAf,CAApC;AAEA,sBACE,QAAC,YAAD,CAAc,QAAd;AACE,IAAA,KAAK,EAAE;AAAEG,MAAAA,KAAK,EAAE,SAASA,KAAlB;AAAyBK,MAAAA,QAAQ,EAAEA;AAAnC,KADT;AAAA,cAGGD,KAAK,CAACE;AAHT;AAAA;AAAA;AAAA;AAAA,UADF;AAOD;;GAVeH,a;;KAAAA,a","sourcesContent":["import React, { createContext, useReducer } from \"react\";\r\n\r\nexport const ThemeContext = createContext();\r\nconst initialState = { darkMode: false };\r\n\r\nconst themeReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"LIGHTMODE\":\r\n      return { darkMode: false };\r\n    case \"DARKMODE\":\r\n      return { darkMode: true };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport function ThemeProvider(props) {\r\n  const [state, dispatch] = useReducer(themeReducer, initialState);\r\n\r\n  return (\r\n    <ThemeContext.Provider\r\n      value={{ state: false || state, dispatch: dispatch }}\r\n    >\r\n      {props.children}\r\n    </ThemeContext.Provider>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}